"use strict";var configs={useNewLine:{name:"是否换行",type:"useNewLine",value:!0},semi:{name:"每行末尾添加分号",type:"semi",value:!0},indent:{name:"缩进4",type:"indent",value:4},isSpace:{name:"全部地方加不加空格",type:"isSpace",value:!1},commaSpace:{name:"逗号后边的空格",type:"commaSpace",value:!0},semiSpace:{name:"分号后边的空格",type:"semiSpace",value:!0},colonSpace:{name:"冒号后边的空格",type:"colonSpace",value:!0},forSpace:{name:"for是否需要加空格",type:"forSpace",value:!0},ifSpace:{name:"if是否需要加空格",type:"ifSpace",value:!0},whileSpace:{name:"while是否需要加空格",type:"whileSpace",value:!0},operatorSpace:{name:"运算符号前后的空格",type:"operatorSpace",value:!0},functionSapce:{name:"函数定义的空格",type:"functionSapce",value:!0},arrowFunctionSapce:{name:"箭头函数定义的空格",type:"arrowFunctionSapce",value:!0},methodFunctionSapce:{name:"类函数数定义的空格",type:"methodFunctionSapce",value:!0},updateSpace:{name:"i++空格",type:"updateSpace",value:!0},classSapce:{name:"类定义空格",type:"classSapce",value:!0},isYun:{name:"是否混淆",type:"isYun",value:!1}},initCode="let a = 1\nlet arr = [1, [1, 2]]\nlet b = {\n\tk1: 'v1',\n    k2: [1, [1, 2]],\n    k3: {\n\t\tk4: 3,\n\t}\n}\nfor (let a of arr) {\n\tconsole.log(a)\n}\n\nvar imageFromPath = function(path) {\n    var img = new Image()\n    img.src = path\n    return img\n}\n\nif (o.fired) {\n    o.x = o.speedX\n    o.y += o.speedY\n}\n\nwhile (parent.firstChild) {\n        parent.removeChild(parent.firstChild)\n}\nconst f = () => {\n    let c = 1\n}";